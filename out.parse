cat example.e | ./parser
\module_
  stmts: 
    list
      \import
        pkg_id: usb_c_pkg
      \package
        pkg_name: otp_ctrl_pkg1
      \unit_st
        unit_name: my_unit
        members: 
          list
            \field_sm
              field: 
                \struct_field_sm
                  id: id
                  type: 
                    \int_predefined_type
            \field_sm
              field: 
                \struct_field_sm
                  id: sig_num
                  type: 
                    \defined_struct_type_dt
                      struct_type_modifiers: 
                        list
                          \id_expr
                            id: signal_number
                        endlist
          endlist
      \enum_type_st
        id: signal_number
        type_id: 
          \enum_dt
            enum_list_items: 
              list
                \enum_list_item
                  id: SIGNAL_0
                \enum_list_item
                  id: SIGNAL_1
                \enum_list_item
                  id: SIGNAL_2
                \enum_list_item
                  id: SIGNAL_3
              endlist
      \struct_like_st
        struct_name: thi_s
        base_struct_name: this_unit
        members: 
          list
            \field_sm
              field: 
                \struct_field_sm
                  id: number
                  type: 
                    \defined_struct_type_dt
                      struct_type_modifiers: 
                        list
                          \id_expr
                            id: signal_number
                        endlist
            \constraint_def_sm
              constraint_expr: 
                \soft_constraint_expr
                  bool_expr: 
                    \constraint_expr
                      bool_expr: 
                        \logical_or_expr
                          e1: 
                            \non_equality_expr
                              e1: 
                                \struct_hier_ref_expr
                                  hiers: 
                                    list
                                      \it_expr
                                      \id_expr
                                        id: number
                                    endlist
                              e2: 
                                \struct_hier_ref_expr
                                  hiers: 
                                    list
                                      \id_expr
                                        id: tx
                                    endlist
                          e2: 
                            \equality_expr
                              e1: 
                                \struct_hier_ref_expr
                                  hiers: 
                                    list
                                      \id_expr
                                        id: len
                                    endlist
                              e2: 
                                \int_expr
                                  int_: 16
            \field_sm
              field: 
                \struct_field_assoc_list_sm
                  id: keyed_list
                  type_: 
                    \assoc_list_type_dt
                      key_id: addr
                      base_type: 
                        \defined_struct_type_dt
                          struct_type_modifiers: 
                            list
                              \id_expr
                                id: MyStruct
                            endlist
            \when_subtype_sm
              subtype_mods: 
                list
                  \struct_type_modifier
                    value: 
                      \id_expr
                        id: EXTEND
                    id: 
                      \id_expr
                        id: val
                  \struct_type_modifier
                    value: 
                      \id_expr
                        id: EXTEND_THIS
                    id: 
                      \id_expr
                        id: that_val
                endlist
              subtype_members: 
                list
                  \field_sm
                    field: 
                      \struct_field_sm
                        id: active
                        type: 
                          \bool_predefined_type
                  \field_sm
                    field: 
                      \struct_field_sm
                        id: len
                        type: 
                          \uint_predefined_type
                  \method_dec_sm
                    id: print
                    arguments: 
                      list
                        \formal
                          name: my_var
                          type_: 
                            \int_predefined_type
                        \formal
                          name: this_var
                          type_: 
                            \bool_predefined_type
                      endlist
                    return_type: 
                      \defined_struct_type_dt
                        struct_type_modifiers: 
                          list
                            \id_expr
                              id: void
                          endlist
                    actions_: 
                      \action_block
                        actions: 
                          nil
                  \tcm_dec_also_sm
                    id: body
                    arguments: 
                      nil
                    return_type: 
                      \int_predefined_type
                    event_id_expr: 
                      \struct_hier_ref_expr
                        hiers: 
                          list
                            \id_expr
                              id: sys
                            \id_expr
                              id: any
                          endlist
                    actions_: 
                      \action_block
                        actions: 
                          nil
                endlist
          endlist
      \enum_type_st
        id: packet_protocol
        type_id: 
          \enum_dt
            enum_list_items: 
              nil
      \extend_struct_st
        struct_type_name: 
          list
            \id_expr
              id: this
          endlist
        members: 
          list
            \field_sm
              field: 
                \struct_field_sm
                  id: my_var
                  type: 
                    \bool_predefined_type
            \constraint_def_sm
              constraint_expr: 
                \all_of_constraint_expr
                  constraints: 
                    list
                      \constraint_expr
                        bool_expr: 
                          \equality_expr
                            e1: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \id_expr
                                      id: my_var
                                  endlist
                            e2: 
                              \int_expr
                                int_: 1
                      \soft_constraint_expr
                        bool_expr: 
                          \constraint_expr
                            bool_expr: 
                              \equality_expr
                                e1: 
                                  \struct_hier_ref_expr
                                    hiers: 
                                      list
                                        \it_expr
                                        \id_expr
                                          id: this_var
                                      endlist
                                e2: 
                                  \int_expr
                                    int_: 12
                    endlist
            \field_sm
              field: 
                \struct_field_assoc_list_sm
                  id: keyed_list
                  type_: 
                    \assoc_list_type_dt
                      key_id: addr
                      base_type: 
                        \defined_struct_type_dt
                          struct_type_modifiers: 
                            list
                              \id_expr
                                id: MyStruct
                            endlist
            \event_def_sm
              id: spi_trans_start
              temporal: 
                \temporal_expr
                  temporal: 
                    \struct_hier_ref_expr
                      hiers: 
                        list
                          \id_expr
                            id: sys
                          \id_expr
                            id: any
                        endlist
            \event_def_sm
              id: spi_not_trans_start
              temporal: 
                \temporal_expr
                  temporal: 
                    \not_temporal_expr
                      temporal: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: spi_trans_start
                            endlist
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: clk_rise
                            endlist
            \event_def_sm
              id: spi_not_trans_fail
              temporal: 
                \temporal_expr
                  temporal: 
                    \fail_temporal_expr
                      temporal: 
                        \detach_temporal_expr
                          temporal: 
                            \struct_hier_ref_expr
                              hiers: 
                                list
                                  \id_expr
                                    id: spi_trans_start
                                endlist
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: clk_rise
                            endlist
            \event_def_sm
              id: spi_enetually_fail
              temporal: 
                \temporal_expr
                  temporal: 
                    \eventually_temporal_expr
                      temporal: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: spi_trans_start
                            endlist
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: clk_rise
                            endlist
            \event_def_sm
              id: spi_enetually_fail
              temporal: 
                \temporal_expr
                  temporal: 
                    \not_temporal_expr
                      temporal: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: spi_trans_start
                            endlist
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: clk_rise
                            endlist
            \event_def_sm
              id: spi_trans_end
              temporal: 
                \temporal_expr
                  temporal: 
                    \struct_hier_ref_expr
                      hiers: 
                        list
                          \id_expr
                            id: spi_trans_start
                        endlist
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: clk_fall
                            endlist
            \event_def_sm
              id: spi_trans_imp
              temporal: 
                \temporal_expr
                  temporal: 
                    \yield_temporal_expr
                      trigger: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: spi_trans_start
                            endlist
                      temporal: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: spi_trans_end
                            endlist
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: clk_fall
                            endlist
            \event_def_sm
              id: spi_has_ended
              temporal: 
                \temporal_expr
                  temporal: 
                    \true_temporal_expr
                      bool_expr: 
                        \greater_then_expr
                          e1: 
                            \struct_hier_ref_expr
                              hiers: 
                                list
                                  \id_expr
                                    id: my_var
                                endlist
                          e2: 
                            \struct_hier_ref_expr
                              hiers: 
                                list
                                  \id_expr
                                    id: x_var
                                endlist
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: sim
                            endlist
            \method_dec_first_sm
              id: my_method
              arguments: 
                list
                  \formal
                    name: packet
                    type_: 
                      \defined_struct_type_dt
                        struct_type_modifiers: 
                          list
                            \id_expr
                              id: InternetPacket
                          endlist
                endlist
              return_type: 
                \int_predefined_type
              actions_: 
                \action_block
                  actions: 
                    nil
            \method_dec_undef_sm
              id: that_method
              arguments: 
                nil
              return_type: 
                \bool_predefined_type
            \method_dec_empty_sm
              id: connect_pointers
              arguments: 
                list
                  \formal
                    name: i
                    type_: 
                      \int_predefined_type
                  \formal
                    name: y
                    type_: 
                      \defined_struct_type_dt
                        struct_type_modifiers: 
                          list
                            \id_expr
                              id: Symbol
                          endlist
                endlist
              return_type: 
                \bool_predefined_type
            \field_sm
              field: 
                \struct_field_list_sm
                  id: my_list
                  len_expr: 
                    \id_expr
                      id: num_cells
                  type_: 
                    \list_type_dt
                      base_type: 
                        \int_predefined_type
            \constraint_def_sm
              constraint_expr: 
                \list_items_constraint_expr
                  item_name: 
                    \id_expr
                      id: i
                  gen_item: 
                    \struct_hier_ref_expr
                      hiers: 
                        list
                          \id_expr
                            id: my_list
                        endlist
                  constraints: 
                    list
                      \constraint_expr
                        bool_expr: 
                          \equality_expr
                            e1: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \it_expr
                                    \id_expr
                                      id: val
                                  endlist
                            e2: 
                              \int_expr
                                int_: 10
                      \constraint_expr
                        bool_expr: 
                          \less_then_expr
                            e1: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \it_expr
                                    \id_expr
                                      id: val
                                  endlist
                            e2: 
                              \int_expr
                                int_: 3
                    endlist
            \constraint_def_sm
              constraint_expr: 
                \distribution_constraint_expr
                  gen_item: 
                    \struct_hier_ref_expr
                      hiers: 
                        list
                          \id_expr
                            id: opcode
                        endlist
                  distribution: 
                    list
                      \distribution_branch_case
                        int_: 
                          \int_expr
                            int_: 10
                        value: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \id_expr
                                  id: ADD
                              endlist
                      \distribution_branch_case
                        int_: 
                          \int_expr
                            int_: 20
                        value: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \id_expr
                                  id: SUB
                              endlist
                    endlist
            \on_event_sm
              event_name: 
                \struct_hier_ref_expr
                  hiers: 
                    list
                      \id_expr
                        id: spi_trans_end
                    endlist
              action_block: 
                \action_block
                  actions: 
                    nil
            \method_dec_sm
              id: build_phase
              arguments: 
                list
                  \formal
                    name: phase
                    type_: 
                      \defined_struct_type_dt
                        struct_type_modifiers: 
                          list
                            \id_expr
                              id: uvmPhase
                          endlist
                endlist
              return_type: 
                \defined_struct_type_dt
                  struct_type_modifiers: 
                    list
                      \id_expr
                        id: void
                    endlist
              actions_: 
                \action_block
                  actions: 
                    nil
            \event_def_sm
              id: clk_rise_r
              temporal: 
                \temporal_expr
                  temporal: 
                    \rise_temporal_expr
                      hdl_path: 
                        \hdl_path_name_expr
                          hdl_hier_ref: 'top.clk.Q'
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: sim
                            endlist
            \event_def_sm
              id: clk_fall_f
              temporal: 
                \temporal_expr
                  temporal: 
                    \rise_temporal_expr
                      hdl_path: 
                        \hdl_path_name_expr
                          hdl_hier_ref: '~/top/clk'
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: sim
                            endlist
            \event_def_sm
              id: clk_change_c
              temporal: 
                \temporal_expr
                  temporal: 
                    \rise_temporal_expr
                      hdl_path: 
                        \hdl_path_name_expr
                          hdl_hier_ref: '~/top/clk'
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: sim
                            endlist
            \event_def_sm
              id: clk_rise
              temporal: 
                \temporal_expr
                  temporal: 
                    \rise_temporal_expr
                      hdl_path: 
                        \hdl_path_name_expr
                          hdl_hier_ref: '~/top/clk/Q_[7:0]'
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: sim
                            endlist
            \event_def_override_sm
              id: clk_both_c
              temporal: 
                \temporal_expr
                  temporal: 
                    \or_temporal_expr
                      te1: 
                        \and_temporal_expr
                          te1: 
                            \struct_hier_ref_expr
                              hiers: 
                                list
                                  \id_expr
                                    id: clk_rise
                                endlist
                          te2: 
                            \struct_hier_ref_expr
                              hiers: 
                                list
                                  \id_expr
                                    id: clk_fall
                                endlist
                      te2: 
                        \and_temporal_expr
                          te1: 
                            \or_temporal_expr
                              te1: 
                                \struct_hier_ref_expr
                                  hiers: 
                                    list
                                      \id_expr
                                        id: clk_change_c
                                    endlist
                              te2: 
                                \struct_hier_ref_expr
                                  hiers: 
                                    list
                                      \id_expr
                                        id: clk_unchanged_c
                                    endlist
                          te2: 
                            \cycle_temporal_expr
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: sys
                              \id_expr
                                id: any
                            endlist
            \field_sm
              field: 
                \struct_field_sm
                  id: M
                  type: 
                    \int_predefined_type
            \event_def_sm
              id: rep_clk_c
              temporal: 
                \temporal_expr
                  temporal: 
                    \sequence_temporal_expr
                      temporals: 
                        list
                          \fixed_repetition_expr
                            rep: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \id_expr
                                      id: M
                                  endlist
                            temporal: 
                              \eventually_temporal_expr
                                temporal: 
                                  \struct_hier_ref_expr
                                    hiers: 
                                      list
                                        \id_expr
                                          id: ev_d
                                      endlist
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \id_expr
                                  id: ev_e
                              endlist
                          \fixed_repetition_expr
                            rep: 
                              \int_expr
                                int_: 5
                            temporal: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \id_expr
                                      id: ev_f
                                  endlist
                        endlist
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: sys
                              \id_expr
                                id: any
                            endlist
            \event_def_sm
              id: true_match
              temporal: 
                \temporal_expr
                  temporal: 
                    \not_temporal_expr
                      temporal: 
                        \sequence_temporal_expr
                          temporals: 
                            list
                              \true_match_repetition_expr
                                from_rep: 
                                  \int_expr
                                    int_: 1
                                to_rep: 
                                  \no_expr
                                temporal: 
                                  \sequence_temporal_expr
                                    temporals: 
                                      list
                                        \or_temporal_expr
                                          te1: 
                                            \struct_hier_ref_expr
                                              hiers: 
                                                list
                                                  \id_expr
                                                    id: a_
                                                endlist
                                          te2: 
                                            \sequence_temporal_expr
                                              temporals: 
                                                list
                                                  \struct_hier_ref_expr
                                                    hiers: 
                                                      list
                                                        \id_expr
                                                          id: b
                                                      endlist
                                                  \struct_hier_ref_expr
                                                    hiers: 
                                                      list
                                                        \id_expr
                                                          id: b
                                                      endlist
                                                endlist
                                        \struct_hier_ref_expr
                                          hiers: 
                                            list
                                              \id_expr
                                                id: c
                                            endlist
                                      endlist
                            endlist
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: qclk
                            endlist
            \event_def_sm
              id: first_match
              temporal: 
                \temporal_expr
                  temporal: 
                    \not_temporal_expr
                      temporal: 
                        \sequence_temporal_expr
                          temporals: 
                            list
                              \first_match_repetition_expr
                                from_rep: 
                                  \int_expr
                                    int_: 2
                                to_rep: 
                                  \int_expr
                                    int_: 3
                                temporal: 
                                  \struct_hier_ref_expr
                                    hiers: 
                                      list
                                        \id_expr
                                          id: ev_a
                                      endlist
                                match_temporal: 
                                  \struct_hier_ref_expr
                                    hiers: 
                                      list
                                        \id_expr
                                          id: ev_b
                                      endlist
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \id_expr
                                      id: ev_c
                                  endlist
                            endlist
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: qclk
                            endlist
            \event_def_sm
              id: blk_seq_c
              temporal: 
                \temporal_expr
                  temporal: 
                    \sequence_temporal_expr
                      temporals: 
                        list
                          \true_match_repetition_expr
                            from_rep: 
                              \int_expr
                                int_: 0
                            to_rep: 
                              \int_expr
                                int_: 3
                            temporal: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \id_expr
                                      id: ev_d
                                  endlist
                          \action_attached_temporal_expr
                            temporal: 
                              \eventually_temporal_expr
                                temporal: 
                                  \struct_hier_ref_expr
                                    hiers: 
                                      list
                                        \id_expr
                                          id: ev_e
                                      endlist
                            actions: 
                              \action_block
                                actions: 
                                  nil
                        endlist
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: qclk
                            endlist
            \expect_nameless_sm
              temporal: 
                \temporal_expr
                  temporal: 
                    \yield_temporal_expr
                      trigger: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: a
                            endlist
                      temporal: 
                        \sequence_temporal_expr
                          temporals: 
                            list
                              \first_match_repetition_expr
                                from_rep: 
                                  \int_expr
                                    int_: 1
                                to_rep: 
                                  \int_expr
                                    int_: 5
                                temporal: 
                                  \cycle_temporal_expr
                                match_temporal: 
                                  \struct_hier_ref_expr
                                    hiers: 
                                      list
                                        \id_expr
                                          id: b
                                      endlist
                            endlist
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: clk
                            endlist
              dut_error_call: 
                \method_call_expr
                  base: 
                    \id_expr
                      id: dut_error
                  arguments: 
                    list
                      \str_expr
                        str: "Finished! %d"
                      \int_expr
                        int_: 123
                    endlist
            \assume_nameless_sm
              temporal: 
                \temporal_expr
                  temporal: 
                    \yield_temporal_expr
                      trigger: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: a_
                            endlist
                      temporal: 
                        \sequence_temporal_expr
                          temporals: 
                            list
                              \first_match_repetition_expr
                                from_rep: 
                                  \int_expr
                                    int_: 1
                                to_rep: 
                                  \int_expr
                                    int_: 5
                                temporal: 
                                  \cycle_temporal_expr
                                match_temporal: 
                                  \struct_hier_ref_expr
                                    hiers: 
                                      list
                                        \id_expr
                                          id: a
                                      endlist
                            endlist
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: clk
                            endlist
              dut_error_call: 
                \method_call_expr
                  base: 
                    \id_expr
                      id: dut_error
                  arguments: 
                    list
                      \str_expr
                        str: "Finished! %d"
                      \int_expr
                        int_: 123
                    endlist
            \constraint_def_sm
              constraint_expr: 
                \field_type_constraint_by_type_expr
                  field_: 
                    \struct_hier_ref_expr
                      hiers: 
                        list
                          \id_expr
                            id: opcode
                        endlist
                  type_: 
                    \defined_struct_type_dt
                      struct_type_modifiers: 
                        list
                          \struct_type_modifier
                            value: 
                              \id_expr
                                id: ACTIVE
                            id: 
                              \id_expr
                                id: is_active
                          \id_expr
                            id: wb_opcode_t
                        endlist
            \constraint_def_sm
              constraint_expr: 
                \field_type_constraint_by_field_expr
                  field_: 
                    \struct_hier_ref_expr
                      hiers: 
                        list
                          \id_expr
                            id: opcode
                        endlist
                  field: 
                    \struct_hier_ref_expr
                      hiers: 
                        list
                          \it_expr
                          \id_expr
                            id: wb_opcode_t
                        endlist
            \constraint_def_sm
              constraint_expr: 
                \list_items_constraint_expr
                  item_name: 
                    \no_expr
                  gen_item: 
                    \struct_hier_ref_expr
                      hiers: 
                        list
                          \id_expr
                            id: my_list
                        endlist
                  constraints: 
                    list
                      \all_of_constraint_expr
                        constraints: 
                          list
                            \field_type_constraint_by_type_expr
                              field_: 
                                \struct_hier_ref_expr
                                  hiers: 
                                    list
                                      \it_expr
                                      \id_expr
                                        id: i
                                    endlist
                              type_: 
                                \int_predefined_type
                            \field_type_constraint_by_field_expr
                              field_: 
                                \struct_hier_ref_expr
                                  hiers: 
                                    list
                                      \it_expr
                                    endlist
                              field: 
                                \struct_hier_ref_expr
                                  hiers: 
                                    list
                                      \me_expr
                                      \id_expr
                                        id: value
                                    endlist
                          endlist
                    endlist
            \event_def_sm
              id: blk_seq_c
              temporal: 
                \temporal_expr
                  temporal: 
                    \sequence_temporal_expr
                      temporals: 
                        list
                          \true_match_repetition_expr
                            from_rep: 
                              \int_expr
                                int_: 0
                            to_rep: 
                              \int_expr
                                int_: 3
                            temporal: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \id_expr
                                      id: ev_d
                                  endlist
                          \action_attached_temporal_expr
                            temporal: 
                              \eventually_temporal_expr
                                temporal: 
                                  \struct_hier_ref_expr
                                    hiers: 
                                      list
                                        \id_expr
                                          id: ev_e
                                      endlist
                            actions: 
                              \action_block
                                actions: 
                                  nil
                        endlist
                  sample_event: 
                    \sampling_event_expr
                      event_expr: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: qclk
                            endlist
            \covergroup_sm
              event_id: blk_seq_c
              cg_opts: 
                list
                  \global_cgo
                    bool_litral: 
                      \false_literal_expr
                  \no_collect_cgo
                    bool_litral: 
                      \true_literal_expr
                  \radix_hex_cgo
                  \text_cgo
                    description: "A new cover group"
                endlist
              cg_items: 
                list
                  \simple_covergroup_item_cgi
                    item_id: opcode
                    cgi_options: 
                      nil
                endlist
            \covergroup_sm
              event_id: first_match
              cg_opts: 
                list
                  \when_cgo
                    bool_expr: 
                      \less_then_expr
                        e1: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \id_expr
                                  id: val
                              endlist
                        e2: 
                          \int_expr
                            int_: 10
                endlist
              cg_items: 
                list
                  \simple_covergroup_item_cgi
                    item_id: opcode
                    cgi_options: 
                      list
                        \at_least_cgio
                          num: 3
                        \ignore_cgio
                          item_bool_expr: 
                            \greater_then_expr
                              e1: 
                                \struct_hier_ref_expr
                                  hiers: 
                                    list
                                      \id_expr
                                        id: opcode
                                    endlist
                              e2: 
                                \struct_hier_ref_expr
                                  hiers: 
                                    list
                                      \id_expr
                                        id: Addr
                                    endlist
                      endlist
                  \on_the_fly_covergroup_item_cgi
                    item_id: len
                    type_: 
                      \int_predefined_type
                    sampled_val: 
                      \struct_hier_ref_expr
                        hiers: 
                          list
                            \id_expr
                              id: my_list
                          endlist
                    cgi_options: 
                      list
                        \per_instance_cgio
                          bool_litral: 
                            \true_literal_expr
                        \radix_bin_cgio
                      endlist
                  \on_the_fly_covergroup_item_cgi
                    item_id: mem_mode
                    type_: 
                      \defined_struct_type_dt
                        struct_type_modifiers: 
                          list
                            \id_expr
                              id: memory_mode
                          endlist
                    sampled_val: 
                      \struct_hier_ref_expr
                        hiers: 
                          list
                            \id_expr
                              id: sys
                            \id_expr
                              id: config
                            \id_expr
                              id: mem_mode
                          endlist
                    cgi_options: 
                      list
                        \per_instance_cgio
                          bool_litral: 
                            \true_literal_expr
                        \radix_bin_cgio
                      endlist
                  \simple_covergroup_item_cgi
                    item_id: len
                    cgi_options: 
                      list
                        \weight_cgio
                          value: 2
                      endlist
                  \cross_covergroup_item_cgi
                    cg_items: 
                      list
                        \id_expr
                          id: len
                        \id_expr
                          id: mem_mode
                        \id_expr
                          id: op1
                        \id_expr
                          id: op2
                      endlist
                    cgi_options: 
                      list
                        \no_collect_cgio
                          bool_litral: 
                            \true_literal_expr
                      endlist
                  \transition_covergroup_item_cgi
                    item_id: st
                    cgi_options: 
                      list
                        \illegal_cgio
                          bool_litral: 
                            \logical_not_expr
                              e: 
                                \logical_or_expr
                                  e1: 
                                    \logical_or_expr
                                      e1: 
                                        \logical_and_expr
                                          e1: 
                                            \equality_expr
                                              e1: 
                                                \struct_hier_ref_expr
                                                  hiers: 
                                                    list
                                                      \id_expr
                                                        id: st
                                                    endlist
                                              e2: 
                                                \struct_hier_ref_expr
                                                  hiers: 
                                                    list
                                                      \id_expr
                                                        id: START
                                                    endlist
                                          e2: 
                                            \equality_expr
                                              e1: 
                                                \struct_hier_ref_expr
                                                  hiers: 
                                                    list
                                                      \id_expr
                                                        id: st
                                                    endlist
                                              e2: 
                                                \struct_hier_ref_expr
                                                  hiers: 
                                                    list
                                                      \id_expr
                                                        id: FETCH1
                                                    endlist
                                      e2: 
                                        \logical_and_expr
                                          e1: 
                                            \equality_expr
                                              e1: 
                                                \struct_hier_ref_expr
                                                  hiers: 
                                                    list
                                                      \id_expr
                                                        id: prev_st
                                                    endlist
                                              e2: 
                                                \struct_hier_ref_expr
                                                  hiers: 
                                                    list
                                                      \id_expr
                                                        id: FETCH1
                                                    endlist
                                          e2: 
                                            \equality_expr
                                              e1: 
                                                \struct_hier_ref_expr
                                                  hiers: 
                                                    list
                                                      \id_expr
                                                        id: st
                                                    endlist
                                              e2: 
                                                \struct_hier_ref_expr
                                                  hiers: 
                                                    list
                                                      \id_expr
                                                        id: FETCH2
                                                    endlist
                                  e2: 
                                    \logical_and_expr
                                      e1: 
                                        \equality_expr
                                          e1: 
                                            \struct_hier_ref_expr
                                              hiers: 
                                                list
                                                  \id_expr
                                                    id: prev_st
                                                endlist
                                          e2: 
                                            \struct_hier_ref_expr
                                              hiers: 
                                                list
                                                  \id_expr
                                                    id: EXEC
                                                endlist
                                      e2: 
                                        \equality_expr
                                          e1: 
                                            \struct_hier_ref_expr
                                              hiers: 
                                                list
                                                  \id_expr
                                                    id: st
                                                endlist
                                          e2: 
                                            \struct_hier_ref_expr
                                              hiers: 
                                                list
                                                  \id_expr
                                                    id: START
                                                endlist
                      endlist
                endlist
            \covergroup_extension_sm
              event_id: first_match
              instance_id: 
                \covergroup_per_unit_instance_ceid
                  e_path: 
                    \struct_hier_ref_expr
                      hiers: 
                        list
                          \id_expr
                            id: sys
                          \id_expr
                            id: a_
                        endlist
              cg_opts: 
                list
                  \global_cgo
                    bool_litral: 
                      \true_literal_expr
                endlist
              cg_items: 
                list
                  \simple_covergroup_item_cgi
                    item_id: opcode
                    cgi_options: 
                      list
                        \when_cgio
                          bool_expr: 
                            \greater_then_expr
                              e1: 
                                \struct_hier_ref_expr
                                  hiers: 
                                    list
                                      \id_expr
                                        id: val
                                    endlist
                              e2: 
                                \int_expr
                                  int_: 4
                      endlist
                endlist
            \covergroup_extension_sm
              event_id: first_match
              instance_id: 
                \covergroup_per_unit_instance_ceid
                  e_path: 
                    \struct_hier_ref_expr
                      hiers: 
                        list
                          \id_expr
                            id: sys
                          \id_expr
                            id: a_
                        endlist
              cg_opts: 
                nil
              cg_items: 
                list
                  \simple_covergroup_item_cgi
                    item_id: opcode
                    cgi_options: 
                      list
                        \when_cgio
                          bool_expr: 
                            \greater_then_expr
                              e1: 
                                \struct_hier_ref_expr
                                  hiers: 
                                    list
                                      \id_expr
                                        id: val
                                    endlist
                              e2: 
                                \int_expr
                                  int_: 4
                      endlist
                  \simple_covergroup_item_cgi
                    item_id: cmd
                    cgi_options: 
                      nil
                endlist
          endlist
      \sequence_st
        id: wb_top_seq
        seq_options: 
          list
            \sequence_item_kind_it
              id: wb_top_seq_item
            \sequence_created_kind_name_it
              id: wb_top_seq_t
            \sequence_created_driver_name_it
              id: wb_top_seq_driver
          endlist
      \struct_st
        struct_name: transaction
        members: 
          list
            \field_sm
              field: 
                \struct_field_sm
                  id: address
                  type: 
                    \uint_predefined_type
            \field_sm
              field: 
                \struct_field_list_sm
                  id: mdls
                  type_: 
                    \list_type_dt
                      base_type: 
                        \defined_struct_type_dt
                          struct_type_modifiers: 
                            list
                              \struct_type_modifier
                                value: 
                                  \id_expr
                                    id: FIU_MDL
                                id: 
                                  \id_expr
                                    id: mdl_type
                              \id_expr
                                id: wb_mdl_ref_model_i
                            endlist
            \field_sm
              field: 
                \struct_field_list_sm
                  id: data
                  type_: 
                    \list_type_dt
                      base_type: 
                        \uint_predefined_type
            \method_dec_empty_sm
              id: transform
              arguments: 
                list
                  \formal
                    name: multiple
                    type_: 
                      \uint_predefined_type
                endlist
              return_type: 
                \uint_predefined_type
          endlist
      \extend_struct_st
        struct_type_name: 
          list
            \struct_type_modifier
              value: 
                \id_expr
                  id: SIGNAL_0
              id: 
                \id_expr
                  id: sig_num
            \id_expr
              id: my_unit
          endlist
        members: 
          nil
      \struct_st
        struct_name: packet
        members: 
          list
            \field_sm
              field: 
                \struct_field_sm
                  id: len
                  type: 
                    \int_predefined_type
            \field_sm
              field: 
                \struct_field_sm
                  id: kind
                  type: 
                    \defined_struct_type_dt
                      struct_type_modifiers: 
                        list
                          \id_expr
                            id: packet_kind
                        endlist
          endlist
      \extend_struct_st
        struct_type_name: 
          list
            \id_expr
              id: packet
          endlist
        members: 
          list
            \constraint_def_sm
              constraint_expr: 
                \constraint_expr
                  bool_expr: 
                    \less_then_expr
                      e1: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: len
                            endlist
                      e2: 
                        \int_expr
                          int_: 256
          endlist
      \struct_st
        struct_name: pci_transaction
        members: 
          list
            \field_sm
              field: 
                \struct_field_sm
                  id: address
                  type: 
                    \uint_predefined_type
            \field_sm
              field: 
                \struct_field_list_sm
                  id: data
                  type_: 
                    \list_type_dt
                      base_type: 
                        \uint_predefined_type
            \field_sm
              field: 
                \struct_field_sm
                  id: command
                  type: 
                    \defined_struct_type_dt
                      struct_type_modifiers: 
                        list
                          \id_expr
                            id: PCICommandType
                        endlist
            \field_sm
              field: 
                \struct_field_sm
                  id: bus_id
                  type: 
                    \uint_predefined_type
            \simple_event_dec_sm
              id: initiate
            \on_event_sm
              event_name: 
                \struct_hier_ref_expr
                  hiers: 
                    list
                      \id_expr
                        id: initiate
                    endlist
              action_block: 
                \action_block
                  actions: 
                    nil
            \covergroup_sm
              event_id: initiate
              cg_opts: 
                nil
              cg_items: 
                list
                  \simple_covergroup_item_cgi
                    item_id: command
                    cgi_options: 
                      nil
                endlist
          endlist
      \struct_st
        struct_name: packet
        members: 
          list
            \field_sm
              field: 
                \struct_field_sm
                  id: len
                  type: 
                    \uint_predefined_type
            \field_sm
              field: 
                \struct_field_sm
                  id: good
                  type: 
                    \bool_predefined_type
            \field_sm
              field: 
                \struct_field_list_sm
                  id: packets
                  type_: 
                    \list_type_dt
                      base_type: 
                        \defined_struct_type_dt
                          struct_type_modifiers: 
                            list
                              \id_expr
                                id: packet
                            endlist
            \constraint_def_sm
              constraint_expr: 
                \list_items_constraint_expr
                  item_name: 
                    \no_expr
                  gen_item: 
                    \struct_hier_ref_expr
                      hiers: 
                        list
                          \id_expr
                            id: packets
                        endlist
                  constraints: 
                    list
                      \constraint_expr
                        bool_expr: 
                          \equality_expr
                            e1: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \me_expr
                                    \id_expr
                                      id: good
                                  endlist
                            e2: 
                              \int_expr
                                int_: 0
                      \constraint_expr
                        bool_expr: 
                          \greater_then_expr
                            e1: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \it_expr
                                    \id_expr
                                      id: len
                                  endlist
                            e2: 
                              \int_expr
                                int_: 6'd00
                    endlist
            \when_subtype_sm
              subtype_mods: 
                list
                  \struct_type_modifier
                    value: 
                      \id_expr
                        id: VALUE
                    id: 
                      \id_expr
                        id: good
                  \id_expr
                    id: packet
                endlist
              subtype_members: 
                list
                  \method_dec_sm
                    id: pkt_msg
                    arguments: 
                      nil
                    actions_: 
                      \action_block
                        actions: 
                          nil
                endlist
          endlist
      \enum_type_st
        id: reg_n
        type_id: 
          \enum_dt
            enum_list_items: 
              list
                \enum_list_item
                  id: REG0
                \enum_list_item
                  id: REG1
                \enum_list_item
                  id: REG2
                \enum_list_item
                  id: REG3
              endlist
      \struct_st
        struct_name: instr
        members: 
          list
            \field_sm
              field: 
                \struct_field_sm
                  id: op1
                  type: 
                    \defined_struct_type_dt
                      struct_type_modifiers: 
                        list
                          \id_expr
                            id: reg_n
                        endlist
          endlist
      \extend_struct_st
        struct_type_name: 
          list
            \id_expr
              id: instr
          endlist
        members: 
          list
            \when_subtype_sm
              subtype_mods: 
                list
                  \struct_type_modifier
                    value: 
                      \id_expr
                        id: REG0
                    id: 
                      \id_expr
                        id: reg_n
                  \id_expr
                    id: instr
                endlist
              subtype_members: 
                list
                  \method_dec_sm
                    id: print_op1
                    arguments: 
                      nil
                    actions_: 
                      \action_block
                        actions: 
                          nil
                endlist
            \when_subtype_sm
              subtype_mods: 
                list
                  \struct_type_modifier
                    value: 
                      \id_expr
                        id: reg
                    id: 
                      \id_expr
                        id: kind
                  \id_expr
                    id: instr
                endlist
              subtype_members: 
                list
                  \method_dec_sm
                    id: print_kind
                    arguments: 
                      nil
                    actions_: 
                      \action_block
                        actions: 
                          nil
                endlist
          endlist
      \enum_type_st
        id: my_type
        type_id: 
          \predefined_subtype_dt
            pred_type: 
              \int_predefined_type
            range_modifier: 
              \range_modifier_expr
                range_items: 
                  list
                    \range_modifier_item_expr
                      bottom: 
                        \int_expr
                          int_: 0
                      top: 
                        \int_expr
                          int_: 100
                  endlist
      \extend_enum_type_st
        type_id: NetworkType
        enum_list_items: 
          list
            \enum_list_item
              id: ARP
          endlist
      \extend_enum_type_st
        type_id: NetworkType
        enum_list_items: 
          list
            \enum_list_item
              id: IP
              expr: 
                \int_expr
                  int_: 0x0800
          endlist
      \enum_type_st
        id: PacketType
        type_id: 
          \enum_dt
            enum_list_items: 
              list
                \enum_list_item
                  id: rx
                  expr: 
                    \int_expr
                      int_: 1
                \enum_list_item
                  id: tx
                \enum_list_item
                  id: ctrl
              endlist
      \extend_enum_type_st
        type_id: PacketType
        enum_list_items: 
          list
            \enum_list_item
              id: status
          endlist
      \enum_type_st
        id: NetworkType
        type_id: 
          \enum_dt
            enum_list_items: 
              nil
            width_modifier: 
              \sized_bits_scalar_expr
                width_expr: 
                  \int_expr
                    int_: 16
      \struct_st
        struct_name: header
        members: 
          list
            \field_sm
              field: 
                \struct_field_list_sm
                  id: dest_address
                  type_: 
                    \list_type_dt
                      base_type: 
                        \predefined_subtype_dt
                          pred_type: 
                            \uint_predefined_type
                          width_modifier: 
                            \sized_bits_scalar_expr
                              width_expr: 
                                \int_expr
                                  int_: 48
            \constraint_def_sm
              constraint_expr: 
                \constraint_expr
                  bool_expr: 
                    \in_enum_expr
                      exp: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: dest_address
                            endlist
                      inside: 
                        \enum_dt
                          enum_list_items: 
                            list
                              \enum_list_item
                                id: WRITE
                              \enum_list_item
                                id: END
                            endlist
            \field_sm
              field: 
                \struct_field_sm
                  id: src_address
                  type: 
                    \predefined_subtype_dt
                      pred_type: 
                        \uint_predefined_type
                      width_modifier: 
                        \sized_bits_scalar_expr
                          width_expr: 
                            \int_expr
                              int_: 48
            \field_sm
              field: 
                \struct_field_sm
                  id: type_id
                  type: 
                    \defined_struct_type_dt
                      struct_type_modifiers: 
                        list
                          \id_expr
                            id: NetworkType
                        endlist
            \field_sm
              field: 
                \struct_field_sm
                  id: values
                  type: 
                    \enum_dt
                      enum_list_items: 
                        list
                          \enum_list_item
                            id: register
                            expr: 
                              \int_expr
                                int_: 1
                          \enum_list_item
                            id: address
                        endlist
            \tcm_dec_sm
              id: body
              arguments: 
                nil
              event_id_expr: 
                \struct_hier_ref_expr
                  hiers: 
                    list
                      \id_expr
                        id: driver
                      \id_expr
                        id: clk
                    endlist
              actions_: 
                \action_block
                  actions: 
                    list
                      \var_decl_act
                        name: hello
                        init_expr: 
                          \bitwise_xor_expr
                            e1: 
                              \str_expr
                                str: "hello"
                            e2: 
                              \int_expr
                                int_: 3
                      \var_decl_act
                        name: packets
                        type_id: 
                          \list_type_dt
                            base_type: 
                              \defined_struct_type_dt
                                struct_type_modifiers: 
                                  list
                                    \id_expr
                                      id: Packets
                                  endlist
                      \var_decl_act
                        name: packet
                      \var_decl_act
                        name: p
                        init_expr: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \me_expr
                                \list_index_expr
                                  base_id: 
                                    \id_expr
                                      id: my_packets
                                  idx_expr: 
                                    \list_index_item_expr
                                      idx_expr: 
                                        \int_expr
                                          int_: 8
                              endlist
                      \var_assign_act
                        id_expr: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \id_expr
                                  id: p
                              endlist
                        assign_expr: 
                          \logical_or_expr
                            e1: 
                              \logical_or_expr
                                e1: 
                                  \bitwise_and_expr
                                    e1: 
                                      \int_expr
                                        int_: 3
                                    e2: 
                                      \struct_hier_ref_expr
                                        hiers: 
                                          list
                                            \id_expr
                                              id: my_packets
                                            \list_index_expr
                                              base_id: 
                                                \id_expr
                                                  id: id
                                              idx_expr: 
                                                \list_index_item_expr
                                                  idx_expr: 
                                                    \int_expr
                                                      int_: 5
                                          endlist
                                e2: 
                                  \binary_add_expr
                                    e1: 
                                      \int_expr
                                        int_: 6
                                    e2: 
                                      \int_expr
                                        int_: 7
                            e2: 
                              \logical_and_expr
                                e1: 
                                  \logical_and_expr
                                    e1: 
                                      \struct_hier_ref_expr
                                        hiers: 
                                          list
                                            \id_expr
                                              id: abc
                                          endlist
                                    e2: 
                                      \struct_hier_ref_expr
                                        hiers: 
                                          list
                                            \id_expr
                                              id: lcg
                                          endlist
                                e2: 
                                  \int_expr
                                    int_: 0x55
                      \var_decl_act
                        name: is_ok
                        type_id: 
                          \bool_predefined_type
                        init_expr: 
                          \true_literal_expr
                      \var_decl_act
                        name: z
                        init_expr: 
                          \right_left_expr
                            e1: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \id_expr
                                      id: abc
                                  endlist
                            e2: 
                              \int_expr
                                int_: 1
                      \compound_right_left_act
                        id: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \id_expr
                                  id: z
                              endlist
                        e2: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \list_index_expr
                                  base_id: 
                                    \id_expr
                                      id: my_packets
                                  idx_expr: 
                                    \list_index_item_expr
                                      idx_expr: 
                                        \int_expr
                                          int_: 0
                              endlist
                      \force_act
                        hdl_or_port: 
                          \hdl_path_name_expr
                            hdl_hier_ref: 'top.clk.q'
                        exp: 
                          \int_expr
                            int_: 1'b1
                      \release_act
                        hdl_or_port: 
                          \hdl_path_name_expr
                            hdl_hier_ref: 'top.clk'
                      \var_decl_act
                        name: q
                        type_id: 
                          \defined_struct_type_dt
                            struct_type_modifiers: 
                              list
                                \id_expr
                                  id: packet
                              endlist
                        init_expr: 
                          \new_nameless_allocate_expr
                      \var_assign_act
                        id_expr: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \id_expr
                                  id: q
                              endlist
                        assign_expr: 
                          \new_allocate_expr
                            struct_type_block: 
                              \defined_type_identifier_expr
                                modifiers: 
                                  list
                                    \id_expr
                                      id: good
                                    \id_expr
                                      id: large
                                    \id_expr
                                      id: packet
                                  endlist
                            scoped_name: p
                            actions: 
                              \action_block
                                actions: 
                                  list
                                    \var_assign_act
                                      id_expr: 
                                        \struct_hier_ref_expr
                                          hiers: 
                                            list
                                              \id_expr
                                                id: p
                                              \id_expr
                                                id: address
                                            endlist
                                      assign_expr: 
                                        \int_expr
                                          int_: 0x55
                                  endlist
                      \var_assign_act
                        id_expr: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \id_expr
                                  id: q
                              endlist
                        assign_expr: 
                          \new_nameless_allocate_expr
                            actions: 
                              \action_block
                                actions: 
                                  list
                                    \var_assign_act
                                      id_expr: 
                                        \struct_hier_ref_expr
                                          hiers: 
                                            list
                                              \it_expr
                                              \id_expr
                                                id: f
                                            endlist
                                      assign_expr: 
                                        \int_expr
                                          int_: 5
                                  endlist
                    endlist
          endlist
      \enum_type_st
        id: size
        type_id: 
          \enum_dt
            enum_list_items: 
              list
                \enum_list_item
                  id: small
                \enum_list_item
                  id: medium
                \enum_list_item
                  id: large
              endlist
      \extend_enum_type_st
        type_id: size
        enum_list_items: 
          list
            \enum_list_item
              id: midsize
          endlist
      \struct_st
        struct_name: packet
        members: 
          list
            \field_sm
              field: 
                \struct_field_sm
                  id: good
                  type: 
                    \bool_predefined_type
            \field_sm
              field: 
                \struct_field_sm
                  id: size
                  type: 
                    \enum_dt
                      enum_list_items: 
                        list
                          \enum_list_item
                            id: small
                          \enum_list_item
                            id: medium
                          \enum_list_item
                            id: large
                        endlist
            \field_sm
              field: 
                \struct_field_sm
                  id: length
                  type: 
                    \int_predefined_type
          endlist
      \extend_struct_st
        struct_type_name: 
          list
            \id_expr
              id: sys
          endlist
        members: 
          list
            \field_sm
              field: 
                \struct_field_sm
                  id: protocol
                  type: 
                    \enum_dt
                      enum_list_items: 
                        list
                          \enum_list_item
                            id: atm
                          \enum_list_item
                            id: eth
                        endlist
            \field_sm
              field: 
                \struct_field_sm
                  id: len
                  type: 
                    \predefined_subtype_dt
                      pred_type: 
                        \int_predefined_type
                      width_modifier: 
                        \sized_bits_scalar_expr
                          width_expr: 
                            \int_expr
                              int_: 10
            \field_sm
              field: 
                \struct_field_list_sm
                  id: data
                  len_expr: 
                    \id_expr
                      id: len
                  type_: 
                    \list_type_dt
                      base_type: 
                        \byte_predefined_type
            \field_sm
              field: 
                \struct_field_sm
                  id: data
                  type: 
                    \predefined_subtype_dt
                      pred_type: 
                        \int_predefined_type
                      range_modifier: 
                        \range_modifier_expr
                          range_items: 
                            list
                              \range_modifier_item_expr
                                bottom: 
                                  \int_expr
                                    int_: 0
                                top: 
                                  \int_expr
                                    int_: 100
                            endlist
            \field_sm
              field: 
                \struct_field_list_sm
                  id: packets
                  len_expr: 
                    \int_expr
                      int_: 5
                  type_: 
                    \list_type_dt
                      base_type: 
                        \defined_struct_type_dt
                          struct_type_modifiers: 
                            list
                              \id_expr
                                id: packet
                            endlist
            \field_sm
              field: 
                \struct_field_list_sm
                  id: ints
                  len_expr: 
                    \int_expr
                      int_: 15
                  type_: 
                    \list_type_dt
                      base_type: 
                        \int_predefined_type
            \method_dec_also_sm
              id: post_generate
              arguments: 
                nil
              actions_: 
                \action_block
                  actions: 
                    list
                      \var_decl_act
                        name: p
                        type_id: 
                          \defined_struct_type_dt
                            struct_type_modifiers: 
                              list
                                \id_expr
                                  id: packet
                              endlist
                        init_expr: 
                          \new_nameless_allocate_expr
                      \var_decl_act
                        name: q
                        type_id: 
                          \defined_struct_type_dt
                            struct_type_modifiers: 
                              list
                                \id_expr
                                  id: packet
                              endlist
                        init_expr: 
                          \new_nameless_allocate_expr
                            struct_type_block: 
                              \defined_type_identifier_expr
                                modifiers: 
                                  list
                                    \id_expr
                                      id: good
                                    \id_expr
                                      id: large
                                    \id_expr
                                      id: packet
                                  endlist
                      \var_decl_act
                        name: x
                        init_expr: 
                          \new_allocate_expr
                            struct_type_block: 
                              \defined_type_identifier_expr
                                modifiers: 
                                  list
                                    \id_expr
                                      id: packet
                                  endlist
                            scoped_name: p
                            actions: 
                              \action_block
                                actions: 
                                  list
                                    \var_assign_act
                                      id_expr: 
                                        \struct_hier_ref_expr
                                          hiers: 
                                            list
                                              \id_expr
                                                id: p
                                              \id_expr
                                                id: length
                                            endlist
                                      assign_expr: 
                                        \int_expr
                                          int_: 5
                                  endlist
                      \non_term_if_then_else_act
                        condition: 
                          \equality_expr
                            e1: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \id_expr
                                      id: q
                                  endlist
                            e2: 
                              \int_expr
                                int_: 1
                        actions: 
                          \action_block
                            actions: 
                              list
                                \compound_add_act
                                  id: 
                                    \struct_hier_ref_expr
                                      hiers: 
                                        list
                                          \id_expr
                                            id: q
                                        endlist
                                  e2: 
                                    \int_expr
                                      int_: 2
                              endlist
                        else_clause: 
                          \if_then_else_act
                            condition: 
                              \greater_then_expr
                                e1: 
                                  \struct_hier_ref_expr
                                    hiers: 
                                      list
                                        \id_expr
                                          id: q
                                      endlist
                                e2: 
                                  \int_expr
                                    int_: 3
                            actions: 
                              \action_block
                                actions: 
                                  list
                                    \var_assign_act
                                      id_expr: 
                                        \struct_hier_ref_expr
                                          hiers: 
                                            list
                                              \id_expr
                                                id: q
                                            endlist
                                      assign_expr: 
                                        \binary_add_expr
                                          e1: 
                                            \binary_div_expr
                                              e1: 
                                                \struct_hier_ref_expr
                                                  hiers: 
                                                    list
                                                      \id_expr
                                                        id: q
                                                    endlist
                                              e2: 
                                                \int_expr
                                                  int_: 2
                                          e2: 
                                            \struct_hier_ref_expr
                                              hiers: 
                                                list
                                                  \me_expr
                                                  \method_call_expr
                                                    base: 
                                                      \id_expr
                                                        id: call_my_func
                                                    arguments: 
                                                      nil
                                                endlist
                                  endlist
                            else_clause: 
                              \action_block
                                actions: 
                                  list
                                    \compound_mul_act
                                      id: 
                                        \struct_hier_ref_expr
                                          hiers: 
                                            list
                                              \id_expr
                                                id: q
                                            endlist
                                      e2: 
                                        \int_expr
                                          int_: 3
                                  endlist
                      \case_bool_act
                        bool_case_branch_items: 
                          list
                            \case_bool_branch_item_case
                              bool_exp: 
                                \equality_expr
                                  e1: 
                                    \struct_hier_ref_expr
                                      hiers: 
                                        list
                                          \id_expr
                                            id: packet
                                          \id_expr
                                            id: length
                                        endlist
                                  e2: 
                                    \int_expr
                                      int_: 64
                              actions: 
                                \action_block
                                  actions: 
                                    list
                                      \compound_mul_act
                                        id: 
                                          \struct_hier_ref_expr
                                            hiers: 
                                              list
                                                \id_expr
                                                  id: out
                                              endlist
                                        e2: 
                                          \int_expr
                                            int_: 5
                                    endlist
                            \default_case_branch_item_case
                              actions: 
                                \action_block
                                  actions: 
                                    list
                                      \var_assign_act
                                        id_expr: 
                                          \struct_hier_ref_expr
                                            hiers: 
                                              list
                                                \id_expr
                                                  id: out
                                              endlist
                                        assign_expr: 
                                          \binary_add_expr
                                            e1: 
                                              \struct_hier_ref_expr
                                                hiers: 
                                                  list
                                                    \id_expr
                                                      id: out
                                                  endlist
                                            e2: 
                                              \int_expr
                                                int_: 7
                                    endlist
                          endlist
                      \var_decl_act
                        name: sub_packets
                        type_id: 
                          \list_type_dt
                            base_type: 
                              \defined_struct_type_dt
                                struct_type_modifiers: 
                                  list
                                    \id_expr
                                      id: packets
                                  endlist
                        init_expr: 
                          \binary_add_expr
                            e1: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \id_expr
                                      id: agent
                                    \list_slicing_expr
                                      list_exp: 
                                        \id_expr
                                          id: packet
                                      range_expr: 
                                        \range_modifier_item_expr
                                          bottom: 
                                            \int_expr
                                              int_: 6
                                          top: 
                                            \int_expr
                                              int_: 8
                                  endlist
                            e2: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \bit_slicing_expr
                                      list_exp: 
                                        \id_expr
                                          id: opcode
                                      bit_slice_expr: 
                                        \list_slicing_expr
                                          list_exp: 
                                            \int_expr
                                              int_: 3
                                          range_expr: 
                                            \int_expr
                                              int_: 5
                                  endlist
                      \var_decl_act
                        name: x
                        type_id: 
                          \uint_predefined_type
                        init_expr: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \id_expr
                                  id: i
                                \method_call_expr
                                  base: 
                                    \id_expr
                                      id: my_method
                                  arguments: 
                                    list
                                      \int_expr
                                        int_: 4
                                      \logical_and_expr
                                        e1: 
                                          \struct_hier_ref_expr
                                            hiers: 
                                              list
                                                \id_expr
                                                  id: i
                                              endlist
                                        e2: 
                                          \int_expr
                                            int_: 3
                                      \struct_hier_ref_expr
                                        hiers: 
                                          list
                                            \method_call_expr
                                              base: 
                                                \id_expr
                                                  id: call_those
                                              arguments: 
                                                list
                                                  \int_expr
                                                    int_: 4
                                                  \struct_hier_ref_expr
                                                    hiers: 
                                                      list
                                                        \id_expr
                                                          id: id
                                                      endlist
                                                endlist
                                          endlist
                                    endlist
                              endlist
                      \var_decl_act
                        name: y
                        type_id: 
                          \bool_predefined_type
                        init_expr: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \method_call_expr
                                  base: 
                                    \id_expr
                                      id: my_call
                                  arguments: 
                                    nil
                              endlist
                      \var_decl_act
                        name: z
                        init_expr: 
                          \list_concat_expr
                            list_concat_items: 
                              list
                                \int_expr
                                  int_: 1
                                \int_expr
                                  int_: 2
                                \binary_add_expr
                                  e1: 
                                    \int_expr
                                      int_: 3
                                  e2: 
                                    \int_expr
                                      int_: 4
                              endlist
                      \var_decl_act
                        name: g
                        type_id: 
                          \list_type_dt
                            base_type: 
                              \bit_predefined_type
                        init_expr: 
                          \bit_concat_expr
                            bit_concat_items: 
                              list
                                \struct_hier_ref_expr
                                  hiers: 
                                    list
                                      \method_call_expr
                                        base: 
                                          \id_expr
                                            id: get_all
                                        arguments: 
                                          nil
                                    endlist
                                \int_expr
                                  int_: 6'xf5
                              endlist
                      \var_decl_act
                        name: los
                        type_id: 
                          \list_type_dt
                            base_type: 
                              \defined_struct_type_dt
                                struct_type_modifiers: 
                                  list
                                    \id_expr
                                      id: string
                                  endlist
                        init_expr: 
                          \list_concat_expr
                            list_concat_items: 
                              list
                                \str_expr
                                  str: "abc"
                                \str_expr
                                  str: "def"
                              endlist
                      \var_decl_act
                        name: loc1
                        type_id: 
                          \list_type_dt
                            base_type: 
                              \defined_struct_type_dt
                                struct_type_modifiers: 
                                  list
                                    \id_expr
                                      id: color
                                  endlist
                        init_expr: 
                          \list_concat_expr
                            list_concat_items: 
                              list
                                \struct_hier_ref_expr
                                  hiers: 
                                    list
                                      \id_expr
                                        id: red
                                    endlist
                                \struct_hier_ref_expr
                                  hiers: 
                                    list
                                      \id_expr
                                        id: green
                                    endlist
                                \struct_hier_ref_expr
                                  hiers: 
                                    list
                                      \id_expr
                                        id: blue
                                    endlist
                              endlist
                      \case_labeled_act
                        exp: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \me_expr
                                \id_expr
                                  id: kind
                              endlist
                        labeled_case_branch_items: 
                          list
                            \case_labeled_branch_item_case
                              label_exp: 
                                \int_expr
                                  int_: 64
                              actions: 
                                \action_block
                                  actions: 
                                    list
                                      \compound_add_act
                                        id: 
                                          \struct_hier_ref_expr
                                            hiers: 
                                              list
                                                \me_expr
                                                \id_expr
                                                  id: counter
                                              endlist
                                        e2: 
                                          \int_expr
                                            int_: 1
                                    endlist
                            \case_labeled_branch_item_case
                              label_exp: 
                                \range_modifier_expr
                                  range_items: 
                                    list
                                      \list_index_item_expr
                                        idx_expr: 
                                          \int_expr
                                            int_: 7
                                      \range_modifier_item_expr
                                        bottom: 
                                          \int_expr
                                            int_: 65
                                        top: 
                                          \int_expr
                                            int_: 256
                                    endlist
                              actions: 
                                \action_block
                                  actions: 
                                    list
                                      \compound_mul_act
                                        id: 
                                          \struct_hier_ref_expr
                                            hiers: 
                                              list
                                                \me_expr
                                                \id_expr
                                                  id: counter
                                              endlist
                                        e2: 
                                          \int_expr
                                            int_: 7
                                    endlist
                            \case_labeled_branch_item_case
                              label_exp: 
                                \range_modifier_expr
                                  range_items: 
                                    list
                                      \range_modifier_item_expr
                                        bottom: 
                                          \int_expr
                                            int_: 257
                                        top: 
                                          \int_expr
                                            int_: 512
                                    endlist
                              actions: 
                                \action_block
                                  actions: 
                                    list
                                      \compound_mul_act
                                        id: 
                                          \struct_hier_ref_expr
                                            hiers: 
                                              list
                                                \me_expr
                                                \id_expr
                                                  id: counter
                                              endlist
                                        e2: 
                                          \int_expr
                                            int_: 17
                                    endlist
                            \case_labeled_branch_item_case
                              label_exp: 
                                \range_modifier_expr
                                  range_items: 
                                    list
                                      \range_modifier_item_expr
                                        bottom: 
                                          \struct_hier_ref_expr
                                            hiers: 
                                              list
                                                \id_expr
                                                  id: small
                                              endlist
                                        top: 
                                          \struct_hier_ref_expr
                                            hiers: 
                                              list
                                                \id_expr
                                                  id: big
                                              endlist
                                    endlist
                              actions: 
                                \action_block
                                  actions: 
                                    list
                                      \compound_add_act
                                        id: 
                                          \struct_hier_ref_expr
                                            hiers: 
                                              list
                                                \me_expr
                                                \id_expr
                                                  id: counter
                                              endlist
                                        e2: 
                                          \int_expr
                                            int_: 15
                                    endlist
                            \default_case_branch_item_case
                              actions: 
                                \action_block
                                  actions: 
                                    list
                                      \var_assign_act
                                        id_expr: 
                                          \struct_hier_ref_expr
                                            hiers: 
                                              list
                                                \me_expr
                                                \id_expr
                                                  id: counter
                                              endlist
                                        assign_expr: 
                                          \int_expr
                                            int_: 0
                                    endlist
                          endlist
                      \compound_add_act
                        id: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \id_expr
                                  id: q
                              endlist
                        e2: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \id_expr
                                  id: value
                                \method_call_expr
                                  base: 
                                    \id_expr
                                      id: my_call
                                  arguments: 
                                    list
                                      \str_expr
                                        str: "hello"
                                    endlist
                              endlist
                      \method_call_act
                        method_call_expr: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \method_call_expr
                                  base: 
                                    \id_expr
                                      id: body
                                  arguments: 
                                    list
                                      \struct_hier_ref_expr
                                        hiers: 
                                          list
                                            \id_expr
                                              id: kind
                                          endlist
                                    endlist
                              endlist
                      \compound_sub_act
                        id: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \id_expr
                                  id: q
                              endlist
                        e2: 
                          \list_concat_expr
                            list_concat_items: 
                              list
                                \int_expr
                                  int_: 5
                                \int_expr
                                  int_: 4
                                \int_expr
                                  int_: 3
                              endlist
                      \if_then_else_act
                        condition: 
                          \equality_expr
                            e1: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \id_expr
                                      id: q
                                  endlist
                            e2: 
                              \int_expr
                                int_: 2
                        actions: 
                          \action_block
                            actions: 
                              list
                                \start_tcm_call_act
                                  method_call_expr: 
                                    \struct_hier_ref_expr
                                      hiers: 
                                        list
                                          \method_call_expr
                                            base: 
                                              \id_expr
                                                id: main
                                            arguments: 
                                              nil
                                        endlist
                              endlist
                      \compute_method_call_act
                        method_call_expr: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \method_call_expr
                                  base: 
                                    \id_expr
                                      id: get_all_refs
                                  arguments: 
                                    list
                                      \struct_hier_ref_expr
                                        hiers: 
                                          list
                                            \id_expr
                                              id: WB_USB_MDL
                                          endlist
                                    endlist
                              endlist
                      \while_loop_act
                        bool_expr: 
                          \non_equality_expr
                            e1: 
                              \binary_add_expr
                                e1: 
                                  \struct_hier_ref_expr
                                    hiers: 
                                      list
                                        \id_expr
                                          id: id
                                      endlist
                                e2: 
                                  \int_expr
                                    int_: 6
                            e2: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \id_expr
                                      id: id
                                  endlist
                        actions: 
                          \action_block
                            actions: 
                              list
                                \if_then_else_act
                                  condition: 
                                    \non_equality_expr
                                      e1: 
                                        \binary_remainder_expr
                                          e1: 
                                            \struct_hier_ref_expr
                                              hiers: 
                                                list
                                                  \id_expr
                                                    id: id
                                                endlist
                                          e2: 
                                            \int_expr
                                              int_: 2
                                      e2: 
                                        \int_expr
                                          int_: 0
                                  actions: 
                                    \action_block
                                      actions: 
                                        list
                                          \continue_act
                                        endlist
                                \compound_add_act
                                  id: 
                                    \struct_hier_ref_expr
                                      hiers: 
                                        list
                                          \id_expr
                                            id: id
                                        endlist
                                  e2: 
                                    \int_expr
                                      int_: 2
                                \while_loop_act
                                  bool_expr: 
                                    \non_equality_expr
                                      e1: 
                                        \struct_hier_ref_expr
                                          hiers: 
                                            list
                                              \id_expr
                                                id: id
                                            endlist
                                      e2: 
                                        \int_expr
                                          int_: 0
                                  actions: 
                                    \action_block
                                      actions: 
                                        list
                                          \var_assign_act
                                            id_expr: 
                                              \struct_hier_ref_expr
                                                hiers: 
                                                  list
                                                    \id_expr
                                                      id: id
                                                  endlist
                                            assign_expr: 
                                              \binary_div_expr
                                                e1: 
                                                  \struct_hier_ref_expr
                                                    hiers: 
                                                      list
                                                        \id_expr
                                                          id: my_agent
                                                        \id_expr
                                                          id: cfg
                                                        \id_expr
                                                          id: id
                                                      endlist
                                                e2: 
                                                  \int_expr
                                                    int_: 2
                                          \repeat_until_loop_act
                                            bool_expr: 
                                              \equality_expr
                                                e1: 
                                                  \struct_hier_ref_expr
                                                    hiers: 
                                                      list
                                                        \id_expr
                                                          id: i
                                                      endlist
                                                e2: 
                                                  \int_expr
                                                    int_: 3
                                            actions: 
                                              \action_block
                                                actions: 
                                                  list
                                                    \compound_add_act
                                                      id: 
                                                        \struct_hier_ref_expr
                                                          hiers: 
                                                            list
                                                              \id_expr
                                                                id: i
                                                            endlist
                                                      e2: 
                                                        \int_expr
                                                          int_: 1
                                                    \method_call_act
                                                      method_call_expr: 
                                                        \struct_hier_ref_expr
                                                          hiers: 
                                                            list
                                                              \method_call_expr
                                                                base: 
                                                                  \id_expr
                                                                    id: my_call
                                                                arguments: 
                                                                  list
                                                                    \binary_add_expr
                                                                      e1: 
                                                                        \struct_hier_ref_expr
                                                                          hiers: 
                                                                            list
                                                                              \id_expr
                                                                                id: i
                                                                            endlist
                                                                      e2: 
                                                                        \binary_mul_expr
                                                                          e1: 
                                                                            \int_expr
                                                                              int_: 4
                                                                          e2: 
                                                                            \binary_div_expr
                                                                              e1: 
                                                                                \struct_hier_ref_expr
                                                                                hiers: 
                                                                                list
                                                                                \id_expr
                                                                                id: i
                                                                                endlist
                                                                              e2: 
                                                                                \int_expr
                                                                                int_: 2
                                                                  endlist
                                                            endlist
                                                  endlist
                                        endlist
                                \repeat_until_loop_act
                                  bool_expr: 
                                    \equality_expr
                                      e1: 
                                        \struct_hier_ref_expr
                                          hiers: 
                                            list
                                              \id_expr
                                                id: i
                                            endlist
                                      e2: 
                                        \int_expr
                                          int_: 3
                                  actions: 
                                    \action_block
                                      actions: 
                                        list
                                          \compound_add_act
                                            id: 
                                              \struct_hier_ref_expr
                                                hiers: 
                                                  list
                                                    \id_expr
                                                      id: i
                                                  endlist
                                            e2: 
                                              \int_expr
                                                int_: 1
                                          \method_call_act
                                            method_call_expr: 
                                              \struct_hier_ref_expr
                                                hiers: 
                                                  list
                                                    \method_call_expr
                                                      base: 
                                                        \id_expr
                                                          id: my_call
                                                      arguments: 
                                                        list
                                                          \binary_add_expr
                                                            e1: 
                                                              \struct_hier_ref_expr
                                                                hiers: 
                                                                  list
                                                                    \id_expr
                                                                      id: i
                                                                  endlist
                                                            e2: 
                                                              \binary_mul_expr
                                                                e1: 
                                                                  \int_expr
                                                                    int_: 4
                                                                e2: 
                                                                  \binary_div_expr
                                                                    e1: 
                                                                      \struct_hier_ref_expr
                                                                        hiers: 
                                                                          list
                                                                            \id_expr
                                                                              id: i
                                                                          endlist
                                                                    e2: 
                                                                      \int_expr
                                                                        int_: 2
                                                        endlist
                                                  endlist
                                        endlist
                              endlist
                      \for_each_loop_act
                        type_id: 
                          \defined_struct_type_dt
                            struct_type_modifiers: 
                              list
                                \struct_type_modifier
                                  value: 
                                    \id_expr
                                      id: TRANSMIT
                                  id: 
                                    \id_expr
                                      id: packet_type
                                \id_expr
                                  id: packet
                              endlist
                        iterated_name: 
                          \id_expr
                            id: pkt
                        is_reverese: true
                        list_exp: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \me_expr
                                \id_expr
                                  id: packets
                              endlist
                        idx_exp: 
                          \id_expr
                            id: idx
                        actions: 
                          \action_block
                            actions: 
                              list
                                \var_assign_act
                                  id_expr: 
                                    \struct_hier_ref_expr
                                      hiers: 
                                        list
                                          \id_expr
                                            id: pkt
                                        endlist
                                  assign_expr: 
                                    \new_nameless_allocate_expr
                                \var_decl_act
                                  name: x
                                  init_expr: 
                                    \hdl_path_name_expr
                                      hdl_hier_ref: 'top.clk'
                                \method_call_act
                                  method_call_expr: 
                                    \struct_hier_ref_expr
                                      hiers: 
                                        list
                                          \id_expr
                                            id: pkt
                                          \method_call_expr
                                            base: 
                                              \id_expr
                                                id: do_item
                                            arguments: 
                                              list
                                                \struct_hier_ref_expr
                                                  hiers: 
                                                    list
                                                      \me_expr
                                                    endlist
                                              endlist
                                        endlist
                                \while_loop_act
                                  bool_expr: 
                                    \type_introspec_negation_expr
                                      field_id: 
                                        \struct_hier_ref_expr
                                          hiers: 
                                            list
                                              \id_expr
                                                id: pkt
                                            endlist
                                      type_id: 
                                        \defined_struct_type_dt
                                          struct_type_modifiers: 
                                            list
                                              \struct_type_modifier
                                                value: 
                                                  \id_expr
                                                    id: WRITE
                                                id: 
                                                  \id_expr
                                                    id: dir
                                              \id_expr
                                                id: packet
                                            endlist
                                  actions: 
                                    \action_block
                                      actions: 
                                        list
                                          \compound_add_act
                                            id: 
                                              \struct_hier_ref_expr
                                                hiers: 
                                                  list
                                                    \id_expr
                                                      id: pkt
                                                  endlist
                                            e2: 
                                              \int_expr
                                                int_: 3
                                        endlist
                                \for_range_loop_act
                                  var_id: i
                                  from_expr: 
                                    \int_expr
                                      int_: 5
                                  to_expr: 
                                    \int_expr
                                      int_: 3
                                  step_expr: 
                                    \binary_add_expr
                                      e1: 
                                        \struct_hier_ref_expr
                                          hiers: 
                                            list
                                              \id_expr
                                                id: i
                                            endlist
                                      e2: 
                                        \int_expr
                                          int_: 1
                                  is_down: false
                                  actions: 
                                    \action_block
                                      actions: 
                                        list
                                          \method_call_act
                                            method_call_expr: 
                                              \struct_hier_ref_expr
                                                hiers: 
                                                  list
                                                    \method_call_expr
                                                      base: 
                                                        \id_expr
                                                          id: out
                                                      arguments: 
                                                        list
                                                          \struct_hier_ref_expr
                                                            hiers: 
                                                              list
                                                                \id_expr
                                                                  id: i
                                                              endlist
                                                        endlist
                                                  endlist
                                        endlist
                              endlist
                      \for_loop_act
                        init_act: 
                          \var_assign_act
                            id_expr: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \id_expr
                                      id: i
                                  endlist
                            assign_expr: 
                              \int_expr
                                int_: 0
                        bool_expr: 
                          \less_then_or_equal_expr
                            e1: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \id_expr
                                      id: i
                                  endlist
                            e2: 
                              \int_expr
                                int_: 10
                        step_act: 
                          \compound_add_act
                            id: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \id_expr
                                      id: i
                                  endlist
                            e2: 
                              \int_expr
                                int_: 1
                        actions: 
                          \action_block
                            actions: 
                              list
                                \method_call_act
                                  method_call_expr: 
                                    \struct_hier_ref_expr
                                      hiers: 
                                        list
                                          \method_call_expr
                                            base: 
                                              \id_expr
                                                id: out
                                            arguments: 
                                              list
                                                \binary_add_expr
                                                  e1: 
                                                    \struct_hier_ref_expr
                                                      hiers: 
                                                        list
                                                          \id_expr
                                                            id: i
                                                        endlist
                                                  e2: 
                                                    \int_expr
                                                      int_: 1
                                              endlist
                                        endlist
                              endlist
                      \for_each_file_in_files_act
                        line_it_name: 
                          \id_expr
                            id: f_name
                        file_pattern_exp: 
                          \str_expr
                            str: "*.txt"
                        actions: 
                          \action_block
                            actions: 
                              list
                                \for_each_line_in_file_act
                                  file_path_expr: 
                                    \struct_hier_ref_expr
                                      hiers: 
                                        list
                                          \id_expr
                                            id: f_name
                                        endlist
                                  actions: 
                                    \action_block
                                      actions: 
                                        list
                                          \if_then_else_act
                                            condition: 
                                              \str_match_expr
                                                str_expr: 
                                                  \struct_hier_ref_expr
                                                    hiers: 
                                                      list
                                                        \it_expr
                                                      endlist
                                                pattern_expr: 
                                                  \str_expr
                                                    str: "/error/"
                                            actions: 
                                              \action_block
                                                actions: 
                                                  list
                                                    \method_call_act
                                                      method_call_expr: 
                                                        \struct_hier_ref_expr
                                                          hiers: 
                                                            list
                                                              \method_call_expr
                                                                base: 
                                                                  \id_expr
                                                                    id: out
                                                                arguments: 
                                                                  list
                                                                    \struct_hier_ref_expr
                                                                      hiers: 
                                                                        list
                                                                          \it_expr
                                                                        endlist
                                                                  endlist
                                                            endlist
                                                  endlist
                                        endlist
                                \first_of_act
                                  threads: 
                                    list
                                      \action_block
                                        actions: 
                                          list
                                            \wait_act
                                              event_id: 
                                                \temporal_expr
                                                  temporal: 
                                                    \struct_hier_ref_expr
                                                      hiers: 
                                                        list
                                                          \id_expr
                                                            id: spi_bus
                                                          \id_expr
                                                            id: trans_end_e
                                                        endlist
                                            \method_call_act
                                              method_call_expr: 
                                                \struct_hier_ref_expr
                                                  hiers: 
                                                    list
                                                      \method_call_expr
                                                        base: 
                                                          \id_expr
                                                            id: messagef
                                                        arguments: 
                                                          list
                                                            \str_expr
                                                              str: "Finished!"
                                                          endlist
                                                    endlist
                                          endlist
                                      \action_block
                                        actions: 
                                          list
                                            \method_call_act
                                              method_call_expr: 
                                                \struct_hier_ref_expr
                                                  hiers: 
                                                    list
                                                      \method_call_expr
                                                        base: 
                                                          \id_expr
                                                            id: dut_error
                                                        arguments: 
                                                          list
                                                            \str_expr
                                                              str: "Failed!"
                                                          endlist
                                                    endlist
                                          endlist
                                    endlist
                                \all_of_act
                                  threads: 
                                    list
                                      \action_block
                                        actions: 
                                          list
                                            \method_call_act
                                              method_call_expr: 
                                                \struct_hier_ref_expr
                                                  hiers: 
                                                    list
                                                      \method_call_expr
                                                        base: 
                                                          \id_expr
                                                            id: messagef
                                                        arguments: 
                                                          list
                                                            \str_expr
                                                              str: "Finished!"
                                                          endlist
                                                    endlist
                                          endlist
                                      \action_block
                                        actions: 
                                          list
                                            \method_call_act
                                              method_call_expr: 
                                                \struct_hier_ref_expr
                                                  hiers: 
                                                    list
                                                      \method_call_expr
                                                        base: 
                                                          \id_expr
                                                            id: dut_error
                                                        arguments: 
                                                          list
                                                            \str_expr
                                                              str: "Failed!"
                                                          endlist
                                                    endlist
                                          endlist
                                    endlist
                                \all_of_act
                                  threads: 
                                    list
                                      \action_block
                                        actions: 
                                          list
                                            \method_call_act
                                              method_call_expr: 
                                                \struct_hier_ref_expr
                                                  hiers: 
                                                    list
                                                      \method_call_expr
                                                        base: 
                                                          \id_expr
                                                            id: check_bus_controller
                                                        arguments: 
                                                          nil
                                                    endlist
                                          endlist
                                      \action_block
                                        actions: 
                                          list
                                            \method_call_act
                                              method_call_expr: 
                                                \struct_hier_ref_expr
                                                  hiers: 
                                                    list
                                                      \method_call_expr
                                                        base: 
                                                          \id_expr
                                                            id: check_memory_controller
                                                        arguments: 
                                                          nil
                                                    endlist
                                          endlist
                                      \action_block
                                        actions: 
                                          list
                                            \wait_act
                                              event_id: 
                                                \temporal_expr
                                                  temporal: 
                                                    \cycle_temporal_expr
                                                  sample_event: 
                                                    \sampling_event_expr
                                                      event_expr: 
                                                        \struct_hier_ref_expr
                                                          hiers: 
                                                            list
                                                              \id_expr
                                                                id: sys
                                                              \id_expr
                                                                id: any
                                                            endlist
                                            \method_call_act
                                              method_call_expr: 
                                                \struct_hier_ref_expr
                                                  hiers: 
                                                    list
                                                      \method_call_expr
                                                        base: 
                                                          \id_expr
                                                            id: check_alu
                                                        arguments: 
                                                          nil
                                                    endlist
                                          endlist
                                    endlist
                              endlist
                      \sync_act
                      \wait_act
                        event_id: 
                          \temporal_expr
                            temporal: 
                              \struct_hier_ref_expr
                                hiers: 
                                  list
                                    \id_expr
                                      id: clk_rise
                                  endlist
                      \return_act
                        exp: 
                          \binary_remainder_expr
                            e1: 
                              \binary_add_expr
                                e1: 
                                  \hdl_path_name_expr
                                    hdl_hier_ref: '~/top/clk'
                                e2: 
                                  \int_expr
                                    int_: 6
                            e2: 
                              \int_expr
                                int_: 101
                      \return_act
                      \gen_act
                        gen_expr: 
                          \struct_hier_ref_expr
                            hiers: 
                              list
                                \id_expr
                                  id: my_item
                              endlist
                        constraints: 
                          list
                            \constraint_expr
                              bool_expr: 
                                \in_enum_expr
                                  exp: 
                                    \struct_hier_ref_expr
                                      hiers: 
                                        list
                                          \it_expr
                                          \id_expr
                                            id: kind
                                        endlist
                                  inside: 
                                    \enum_dt
                                      enum_list_items: 
                                        list
                                          \enum_list_item
                                            id: normal
                                          \enum_list_item
                                            id: control
                                        endlist
                          endlist
                      \do_seq_act
                        seq_item: 
                          \seq_item_expr
                            field_type_exprs: 
                              list
                                \id_expr
                                  id: my_seq
                              endlist
                        constraints: 
                          list
                            \constraint_expr
                              bool_expr: 
                                \in_enum_expr
                                  exp: 
                                    \struct_hier_ref_expr
                                      hiers: 
                                        list
                                          \it_expr
                                          \id_expr
                                            id: spi_op
                                        endlist
                                  inside: 
                                    \enum_dt
                                      enum_list_items: 
                                        list
                                          \enum_list_item
                                            id: WRITE
                                          \enum_list_item
                                            id: READ
                                          \enum_list_item
                                            id: FAST_READ
                                        endlist
                            \constraint_expr
                              bool_expr: 
                                \equality_expr
                                  e1: 
                                    \struct_hier_ref_expr
                                      hiers: 
                                        list
                                          \it_expr
                                          \id_expr
                                            id: fiu_mdl
                                        endlist
                                  e2: 
                                    \struct_hier_ref_expr
                                      hiers: 
                                        list
                                          \id_expr
                                            id: fiu_mdl
                                        endlist
                          endlist
                    endlist
          endlist
      \enum_type_st
        id: new_int
        type_id: 
          \predefined_subtype_dt
            pred_type: 
              \int_predefined_type
            range_modifier: 
              \range_modifier_expr
                range_items: 
                  list
                    \range_modifier_item_expr
                      bottom: 
                        \no_expr
                      top: 
                        \int_expr
                          int_: 34
                    \list_index_item_expr
                      idx_expr: 
                        \int_expr
                          int_: 5
                    \range_modifier_item_expr
                      bottom: 
                        \int_expr
                          int_: 7
                      top: 
                        \no_expr
                    \range_modifier_item_expr
                      bottom: 
                        \int_expr
                          int_: 9
                      top: 
                        \int_expr
                          int_: 10
                  endlist
            width_modifier: 
              \sized_bits_scalar_expr
                width_expr: 
                  \int_expr
                    int_: 60
      \enum_type_st
        id: my_opcode
        type_id: 
          \defined_subtype_dt
            id: opcode
            range_modifier: 
              \range_modifier_expr
                range_items: 
                  list
                    \range_modifier_item_expr
                      bottom: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: READ
                            endlist
                      top: 
                        \struct_hier_ref_expr
                          hiers: 
                            list
                              \id_expr
                                id: WRITE
                            endlist
                  endlist
    endlist

